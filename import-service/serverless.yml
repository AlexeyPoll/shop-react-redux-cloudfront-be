service: import-service

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: eu-west-1
  iamRoleStatements:
    - Effect: Allow
      Action: 
        - s3:ListBucket
      Resource:
        - arn:aws:s3:::module-5-bucket
    - Effect: Allow
      Action:
        - s3:*
      Resource:
        - arn:aws:s3:::module-5-bucket/*
    - Effect: Allow
      Action: "sqs:*"
      Resource:
        - Fn::GetAtt: [ SQSQueue, Arn ]

  environment:
      SQS_URL:
        Ref: SQSQueue

resources:
  Resources:
    SQSQueue: 
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue
    ApiGatewayRestApi:
      Type: AWS::ApiGateway::RestApi
      Properties:
        Name: dev-epam-aws-import-service-dev
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
          gatewayresponse.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
        ResponseType: "DEFAULT_4XX"
        RestApiId:
          Ref: ApiGatewayRestApi

functions:
  importProductsFile:
    handler: handler.importProductsFile
    events:
      - http:
          path: import
          method: get
          authorizer:
            name: 'tokenAuthorizer'
            arn: 'arn:aws:lambda:eu-west-1:#{AWS::AccountId}:function:epam-aws-authorization-service-dev-basicAuthorizer'
            resultTtlInSeconds: 0
            identitySource: 'method.request.header.Authorization'
            type: 'token'
          request:
            parameters:
              querystrings:
                name: true
  importFileParser:
    handler: handler.importFileParser
    events:
      - s3:
        bucket: module-5-bucket
        event: s3:ObjectCreated:*
        rules: 
          - prefix: uploaded/
        existing: true
        forceDeploy: true